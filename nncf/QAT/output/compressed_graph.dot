strict digraph  {
"0 /nncf_model_input_0";
"1 SymmetricQuantizer/symmetric_quantize_0";
"2 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"3 ResNet/NNCFConv2d[conv1]/conv2d_0";
"4 ResNet/NNCFBatchNorm2d[bn1]/batch_norm_0";
"5 ResNet/ReLU[relu]/relu__0";
"6 ResNet/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"7 ResNet/MaxPool2d[maxpool]/max_pool2d_0";
"8 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"9 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0";
"10 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"11 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/relu__0";
"12 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"13 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"14 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0";
"15 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"16 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"17 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd___0";
"18 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/relu__1";
"19 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"20 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"21 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0";
"22 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"23 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/relu__0";
"24 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"25 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"26 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0";
"27 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"28 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"29 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd___0";
"30 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/relu__1";
"31 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"32 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"33 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0";
"34 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"35 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/relu__0";
"36 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"37 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"38 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0";
"39 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"40 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"41 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"42 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"43 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0";
"44 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"45 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd___0";
"46 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/relu__1";
"47 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"48 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"49 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0";
"50 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"51 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/relu__0";
"52 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"53 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"54 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0";
"55 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"56 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"57 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd___0";
"58 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/relu__1";
"59 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"60 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"61 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0";
"62 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"63 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/relu__0";
"64 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"65 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"66 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0";
"67 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"68 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"69 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"70 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"71 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0";
"72 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"73 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd___0";
"74 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/relu__1";
"75 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"76 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"77 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0";
"78 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"79 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/relu__0";
"80 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"81 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"82 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0";
"83 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"84 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"85 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd___0";
"86 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/relu__1";
"87 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"88 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"89 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0";
"90 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"91 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/relu__0";
"92 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"93 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"94 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0";
"95 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"96 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"97 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"98 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0";
"99 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0";
"100 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"101 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd___0";
"102 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/relu__1";
"103 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"104 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"105 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0";
"106 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0";
"107 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/relu__0";
"108 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"109 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"110 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0";
"111 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0";
"112 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0";
"113 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd___0";
"114 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/relu__1";
"115 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"116 ResNet/AdaptiveAvgPool2d[avgpool]/adaptive_avg_pool2d_0";
"117 ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"118 ResNet/flatten_0";
"119 ResNet/NNCFLinear[fc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"120 ResNet/NNCFLinear[fc]/linear_0";
"121 /nncf_model_output_0";
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 3, 64, 64) \n0 -> 0", style=solid];
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 ResNet/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 3, 64, 64) \n0 -> 0", style=solid];
"2 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 ResNet/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 3, 7, 7) \n0 -> 1", style=solid];
"3 ResNet/NNCFConv2d[conv1]/conv2d_0" -> "4 ResNet/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 32, 32) \n0 -> 0", style=solid];
"4 ResNet/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "5 ResNet/ReLU[relu]/relu__0"  [label="(1, 64, 32, 32) \n0 -> 0", style=solid];
"5 ResNet/ReLU[relu]/relu__0" -> "6 ResNet/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 32, 32) \n0 -> 0", style=solid];
"6 ResNet/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "7 ResNet/MaxPool2d[maxpool]/max_pool2d_0"  [label="(1, 64, 32, 32) \n0 -> 0", style=solid];
"7 ResNet/MaxPool2d[maxpool]/max_pool2d_0" -> "9 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"7 ResNet/MaxPool2d[maxpool]/max_pool2d_0" -> "17 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd___0"  [label="(1, 64, 16, 16) \n0 -> 1", style=solid];
"8 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "9 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 64, 3, 3) \n0 -> 1", style=solid];
"9 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0" -> "10 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"10 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "11 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/relu__0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"11 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/relu__0" -> "12 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"12 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "14 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"13 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "14 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(64, 64, 3, 3) \n0 -> 1", style=solid];
"14 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0" -> "15 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"15 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "16 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"16 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "17 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd___0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"17 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd___0" -> "18 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/relu__1"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"18 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/relu__1" -> "19 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"19 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "21 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"19 ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "29 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd___0"  [label="(1, 64, 16, 16) \n0 -> 1", style=solid];
"20 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "21 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(64, 64, 3, 3) \n0 -> 1", style=solid];
"21 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0" -> "22 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"22 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "23 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/relu__0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"23 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/relu__0" -> "24 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"24 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "26 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"25 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "26 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(64, 64, 3, 3) \n0 -> 1", style=solid];
"26 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0" -> "27 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"27 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "28 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"28 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "29 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd___0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"29 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd___0" -> "30 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/relu__1"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"30 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/relu__1" -> "31 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"31 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "33 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"31 ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "42 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 64, 16, 16) \n0 -> 0", style=solid];
"32 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "33 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(128, 64, 3, 3) \n0 -> 1", style=solid];
"33 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0" -> "34 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"34 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "35 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/relu__0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"35 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/relu__0" -> "36 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"36 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "38 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"37 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "38 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(128, 128, 3, 3) \n0 -> 1", style=solid];
"38 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0" -> "39 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"39 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "40 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"40 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "45 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd___0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"41 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "42 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(128, 64, 1, 1) \n0 -> 1", style=solid];
"42 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "43 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"43 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0" -> "44 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"44 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "45 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd___0"  [label="(1, 128, 8, 8) \n0 -> 1", style=solid];
"45 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd___0" -> "46 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/relu__1"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"46 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/relu__1" -> "47 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"47 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "49 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"47 ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "57 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd___0"  [label="(1, 128, 8, 8) \n0 -> 1", style=solid];
"48 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "49 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(128, 128, 3, 3) \n0 -> 1", style=solid];
"49 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0" -> "50 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"50 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "51 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/relu__0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"51 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/relu__0" -> "52 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"52 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "54 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"53 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "54 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(128, 128, 3, 3) \n0 -> 1", style=solid];
"54 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0" -> "55 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"55 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "56 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"56 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "57 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd___0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"57 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd___0" -> "58 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/relu__1"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"58 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/relu__1" -> "59 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"59 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "61 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"59 ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "70 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 128, 8, 8) \n0 -> 0", style=solid];
"60 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "61 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 128, 3, 3) \n0 -> 1", style=solid];
"61 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0" -> "62 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"62 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "63 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/relu__0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"63 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/relu__0" -> "64 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"64 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "66 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"65 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "66 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3) \n0 -> 1", style=solid];
"66 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0" -> "67 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"67 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "68 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"68 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "73 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd___0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"69 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "70 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(256, 128, 1, 1) \n0 -> 1", style=solid];
"70 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "71 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"71 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0" -> "72 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"72 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "73 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd___0"  [label="(1, 256, 4, 4) \n0 -> 1", style=solid];
"73 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd___0" -> "74 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/relu__1"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"74 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/relu__1" -> "75 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"75 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "77 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"75 ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "85 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd___0"  [label="(1, 256, 4, 4) \n0 -> 1", style=solid];
"76 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "77 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(256, 256, 3, 3) \n0 -> 1", style=solid];
"77 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0" -> "78 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"78 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "79 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/relu__0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"79 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/relu__0" -> "80 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"80 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "82 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"81 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "82 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(256, 256, 3, 3) \n0 -> 1", style=solid];
"82 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0" -> "83 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"83 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "84 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"84 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "85 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd___0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"85 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd___0" -> "86 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/relu__1"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"86 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/relu__1" -> "87 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"87 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "89 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"87 ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "98 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(1, 256, 4, 4) \n0 -> 0", style=solid];
"88 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "89 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(512, 256, 3, 3) \n0 -> 1", style=solid];
"89 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d_0" -> "90 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"90 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "91 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/relu__0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"91 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/relu__0" -> "92 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"92 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "94 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"93 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "94 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(512, 512, 3, 3) \n0 -> 1", style=solid];
"94 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d_0" -> "95 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"95 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "96 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"96 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "101 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd___0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"97 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "98 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0"  [label="(512, 256, 1, 1) \n0 -> 1", style=solid];
"98 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFConv2d[0]/conv2d_0" -> "99 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"99 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/batch_norm_0" -> "100 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"100 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/NNCFBatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "101 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd___0"  [label="(1, 512, 2, 2) \n0 -> 1", style=solid];
"101 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd___0" -> "102 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/relu__1"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"102 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/relu__1" -> "103 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"103 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "105 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"103 ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "113 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd___0"  [label="(1, 512, 2, 2) \n0 -> 1", style=solid];
"104 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "105 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(512, 512, 3, 3) \n0 -> 1", style=solid];
"105 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d_0" -> "106 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"106 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn1]/batch_norm_0" -> "107 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/relu__0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"107 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/relu__0" -> "108 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"108 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "110 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"109 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "110 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(512, 512, 3, 3) \n0 -> 1", style=solid];
"110 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d_0" -> "111 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"111 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/batch_norm_0" -> "112 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"112 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFBatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize_0" -> "113 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd___0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"113 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd___0" -> "114 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/relu__1"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"114 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/relu__1" -> "115 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"115 ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "116 ResNet/AdaptiveAvgPool2d[avgpool]/adaptive_avg_pool2d_0"  [label="(1, 512, 2, 2) \n0 -> 0", style=solid];
"116 ResNet/AdaptiveAvgPool2d[avgpool]/adaptive_avg_pool2d_0" -> "117 ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(1, 512, 1, 1) \n0 -> 0", style=solid];
"117 ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "118 ResNet/flatten_0"  [label="(1, 512, 1, 1) \n0 -> 0", style=solid];
"118 ResNet/flatten_0" -> "120 ResNet/NNCFLinear[fc]/linear_0"  [label="(1, 512) \n0 -> 0", style=solid];
"119 ResNet/NNCFLinear[fc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "120 ResNet/NNCFLinear[fc]/linear_0"  [label="(200, 512) \n0 -> 1", style=solid];
"120 ResNet/NNCFLinear[fc]/linear_0" -> "121 /nncf_model_output_0"  [label="(1, 200) \n0 -> 0", style=solid];
}
